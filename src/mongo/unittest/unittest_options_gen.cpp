/**
 * WARNING: This is a generated file. Do not modify.
 *
 * Source: buildscripts/idl/idlc.py --include src --base_dir build/opt --target_arch x86_64 --header build/opt/mongo/unittest/unittest_options_gen.h --output build/opt/mongo/unittest/unittest_options_gen.cpp src/mongo/unittest/unittest_options.idl
 */

#include "mongo/platform/basic.h"

#include "mongo/unittest/unittest_options_gen.h"

#include <bitset>
#include <set>

#include "mongo/bson/bsonobjbuilder.h"
#include "mongo/db/auth/authorization_contract.h"
#include "mongo/db/commands.h"
#include "mongo/idl/command_generic_argument.h"
#include "mongo/util/options_parser/option_section.h"
#include "mongo/util/options_parser/startup_option_init.h"
#include "mongo/util/options_parser/startup_options.h"

namespace mongo {
namespace unittest {


Status addUnitTestOptions(optionenvironment::OptionSection* options_ptr) {
    auto& options = *options_ptr;
    namespace moe = ::mongo::optionenvironment;

    options
        .addOptionChaining("list", "list", moe::Switch, "List all test suites in this unit test.", {}, {}, moe::OptionSection::OptionParserUsageType::IDLAutoGeneratedCode)
        .setSources(moe::SourceCommandLine)
        .setDefault(moe::Value(false))
    ;

    options
        .addOptionChaining("suite", "suite", moe::StringVector, "Test suite name. Specify --suite more than once to run multiple suites.", {}, {}, moe::OptionSection::OptionParserUsageType::IDLAutoGeneratedCode)
        .setSources(moe::SourceCommandLine)
    ;

    options
        .addOptionChaining("filter", "filter", moe::String, "Test case name filter. Specify the substring of the test names.", {}, {}, moe::OptionSection::OptionParserUsageType::IDLAutoGeneratedCode)
        .setSources(moe::SourceCommandLine)
    ;

    options
        .addOptionChaining("fileNameFilter", "fileNameFilter", moe::String, "Filter test cases by source file name.", {}, {}, moe::OptionSection::OptionParserUsageType::IDLAutoGeneratedCode)
        .setSources(moe::SourceCommandLine)
    ;

    options
        .addOptionChaining("repeat", "repeat", moe::Int, "Specifies the number of runs for each test.", {}, {}, moe::OptionSection::OptionParserUsageType::IDLAutoGeneratedCode)
        .setSources(moe::SourceCommandLine)
        .setDefault(moe::Value(1))
    ;

    options
        .addOptionChaining("verbose", "verbose", moe::String, "Log more verbose output.  Specify one or more \'v\'s to increase verbosity.", {}, {}, moe::OptionSection::OptionParserUsageType::IDLAutoGeneratedCode)
        .setSources(moe::SourceCommandLine)
        .setImplicit(moe::Value("v"))
    ;

    return Status::OK();
}

}  // namespace unittest
}  // namespace mongo
