/**
 * WARNING: This is a generated file. Do not modify.
 *
 * Source: buildscripts/idl/idlc.py --include src --base_dir build/opt --target_arch x86_64 --header build/opt/mongo/client/sdam/json_test_runner_cli_options_gen.h --output build/opt/mongo/client/sdam/json_test_runner_cli_options_gen.cpp src/mongo/client/sdam/json_test_runner_cli_options.idl
 */

#include "mongo/platform/basic.h"

#include "mongo/client/sdam/json_test_runner_cli_options_gen.h"

#include <bitset>
#include <set>

#include "mongo/bson/bsonobjbuilder.h"
#include "mongo/db/auth/authorization_contract.h"
#include "mongo/db/commands.h"
#include "mongo/idl/command_generic_argument.h"
#include "mongo/util/options_parser/option_section.h"
#include "mongo/util/options_parser/startup_option_init.h"
#include "mongo/util/options_parser/startup_options.h"

namespace mongo {


Status addCliOptions(optionenvironment::OptionSection* options_ptr) {
    auto& options = *options_ptr;
    namespace moe = ::mongo::optionenvironment;

    {
        moe::OptionSection section("General options");

        section
            .addOptionChaining("help", "help,h", moe::Switch, "Show this usage information", {}, {}, moe::OptionSection::OptionParserUsageType::IDLAutoGeneratedCode)
            .setSources(moe::SourceCommandLine)
        ;

        section
            .addOptionChaining("filter", "filter,f", moe::StringVector, "Filter by test file name", {}, {}, moe::OptionSection::OptionParserUsageType::IDLAutoGeneratedCode)
            .setSources(moe::SourceCommandLine)
        ;

        section
            .addOptionChaining("source-dir", "source-dir,s", moe::String, "The directory containing the json test files", {}, {}, moe::OptionSection::OptionParserUsageType::IDLAutoGeneratedCode)
            .setSources(moe::SourceCommandLine)
        ;

        section
            .addOptionChaining("verbose", "verbose,v", moe::String, "The verbosity level", {}, {}, moe::OptionSection::OptionParserUsageType::IDLAutoGeneratedCode)
            .setSources(moe::SourceCommandLine)
            .setImplicit(moe::Value("v"))
        ;

        auto status = options.addSection(section);
        if (!status.isOK()) {
            return status;
        }
    }

    return Status::OK();
}

}  // namespace mongo
